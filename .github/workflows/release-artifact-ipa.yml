name: Release Artifact IPA

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - develop

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Access workspace
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up npm
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies without updating lockfile
        run: npm ci

      - name: Selecting Xcode Version
        run: sudo xcode-select -switch /Applications/Xcode_15.4.app

      - name: Running Xcode version Is?
        run: /usr/bin/xcodebuild -version

      - name: Write env
        run: |
          cat << EOF > .env
            ${{ secrets.ENV }}
          EOF

      - name: Write 'GoogleService-Info.plist'
        run: |
          cat << EOF > ./GoogleService-Info.plist
            ${{ secrets.GOOGLE_SERVICE_INFO_PLIST }}
          EOF

      - name: Build Cleanup
        run: |
          xcodebuild clean -project ios/LapinLearn.xcodeproj -scheme LapinLearn

      - name: Generate 'ios'
        run: npx expo prebuild --platform ios && cd ios && rm -rf Pods Podfile.lock && pod install --repo-update && pod install && cd ..



  release:
    name: Release IPA
    runs-on: macos-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Verify Xcode project path
        run: ls -la ios/

      - name: Kill Xcode
        run: ps aux | grep Xcode | grep -v grep | awk '{print $2}' | xargs kill -9 || true

      - name: Build Archive
        uses: yukiarrr/ios-build-action@v1.5.0
        with:
          project-path: ${{ github.workspace }}/ios/LapinLearn.xcodeproj
          workspace-path: ${{ github.workspace }}/ios/LapinLearn.xcworkspace
          scheme: LapinLearn
          configuration: Release
          export-method: app-store
          p12-base64: ${{ secrets.IOS_CERTIFICATE }}
          certificate-password: ${{ secrets.IOS_CERT_PASSWORD }}
          mobileprovision-base64: ${{ secrets.IOS_PROVISIONING_PROFILE }}
          code-signing-identity: ${{ secrets.CODE_SIGNING_IDENTITY }}
          team-id: ${{ secrets.TEAM_ID }}

      - name: Release ipa artifact
        uses: actions/upload-artifact@v3
        with:
          name: ipa
          path: ios/build/*.ipa

      # Upload IPA file to TestFlight.
      - name: Upload App
        if: success()
        env:
          APPLEID_USERNAME: ${{ secrets.APPLEID_USERNAME }}
          APPLEID_PASSWORD: ${{ secrets.APPLEID_PASSWORD }}
        run: |
          xcrun altool --upload-app -t ios -f ./**.ipa -u "$APPLEID_USERNAME" -p "$APPLEID_PASSWORD" --verbose
